🔘 Toggle clicked - checking server state first...
chat-interface.tsx:492 🔍 Checking server subscription status via cookies...
chat-interface.tsx:495 📡 Making API call to: /api/push-status
chat-interface.tsx:500 📡 Response status: 200 OK
chat-interface.tsx:504 📡 Response content-type: application/json; charset=utf-8
chat-interface.tsx:508 📋 Server subscription status: true
chat-interface.tsx:917 🔘 Server has subscription: true
chat-interface.tsx:918 🔘 Local enabled state: true
chat-interface.tsx:492 🔍 Checking server subscription status via cookies...
chat-interface.tsx:495 📡 Making API call to: /api/push-status
chat-interface.tsx:500 📡 Response status: 200 OK
chat-interface.tsx:504 📡 Response content-type: application/json; charset=utf-8
chat-interface.tsx:508 📋 Server subscription status: true
chat-interface.tsx:534 🔄 Toggle: local state = true server state = true
chat-interface.tsx:637 Chat interface received message: server-heartbeat {type: 'server-heartbeat'}
chat-interface.tsx:637 Chat interface received message: pong {type: 'pong'}
chat-interface.tsx:216 ❌ Failed to setup push notifications: Error: Service worker timeout
    at chat-interface.tsx:99:60
chat-interface.tsx:828 ✅ Push notifications ready for room: 18a4ff
chat-interface.tsx:216 ❌ Failed to setup push notifications: Error: Service worker timeout
    at chat-interface.tsx:99:60
chat-interface.tsx:273 ✅ Push notifications setup completed successfully
chat-interface.tsx:637 Chat interface received message: pong {type: 'pong'}
chat-interface.tsx:298 📱 Visibility changed: true hidden
chat-interface.tsx:309 🏠 App backgrounded - notifying server for push notifications
chat-interface.tsx:637 Chat interface received message: new-message {type: 'new-message', message: {…}}
sw.js:19 Push received: PushEvent {isTrusted: true, data: PushMessageData, type: 'push', target: ServiceWorkerGlobalScope, currentTarget: ServiceWorkerGlobalScope, …}
chat-interface.tsx:637 Chat interface received message: new-message {type: 'new-message', message: {…}}
sw.js:19 Push received: PushEvent {isTrusted: true, data: PushMessageData, type: 'push', target: ServiceWorkerGlobalScope, currentTarget: ServiceWorkerGlobalScope, …}
chat-interface.tsx:637 Chat interface received message: server-heartbeat {type: 'server-heartbeat'}
chat-interface.tsx:637 Chat interface received message: pong {type: 'pong'}
chat-interface.tsx:298 📱 Visibility changed: false visible
chat-interface.tsx:300 👀 App foregrounded - notifying server
chat-interface.tsx:637 Chat interface received message: pong {type: 'pong'}
sw.js:78 Notification closed: NotificationEvent {isTrusted: true, notification: Notification, action: '', reply: '', type: 'notificationclose', …}
chat-interface.tsx:637 Chat interface received message: server-heartbeat {type: 'server-heartbeat'}