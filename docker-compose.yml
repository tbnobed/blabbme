services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: blabbme_db
      POSTGRES_USER: blabbme_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    networks:
      - blabbme_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U blabbme_user -d blabbme_db"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 40s
    command: >
      postgres 
      -c shared_preload_libraries=pg_stat_statements
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=768MB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://blabbme_user:${POSTGRES_PASSWORD:-secure_password_123}@postgres:5432/blabbme_db
      PGHOST: postgres
      PGPORT: 5432
      PGUSER: blabbme_user
      PGPASSWORD: ${POSTGRES_PASSWORD:-secure_password_123}
      PGDATABASE: blabbme_db
      NODE_ENV: production
      PORT: 5000
      SESSION_SECRET: ${SESSION_SECRET:-your_very_long_random_session_secret_here_change_this_in_production}
    ports:
      - "${APP_PORT:-5000}:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - blabbme_network
      - proxy_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/api/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 90s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  postgres_data:
    driver: local

networks:
  blabbme_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  proxy_network:
    driver: bridge
    name: proxy_network